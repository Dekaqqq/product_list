{"version":3,"sources":["components/ProdutsList/ProductsItem/ProductsItem.js","styledComponents/styled.js","redux/value.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","redux/loading.js","services/fetchData.js","redux/error.js","redux/products.js","components/App/App.js","redux/store/store.js","index.js"],"names":["ProductsItem","img","name","bsr_category","link","shortName","slice","Card","style","width","marginBottom","Img","variant","src","height","Body","Title","Text","Link","href","target","rel","styled","li","List","ul","ListCategoryDescription","span","ADD_VALUE","a","p","getValue","state","value","connect","products","filteredProducts","filter","el","toLowerCase","includes","map","key","asin","ProductsInput","text","handleChange","onSearch","props","setState","location","this","search","searchValue","index","lastIndexOf","result","substring","prevProps","pathname","type","onChange","className","placeholder","Component","compose","withRouter","categories","path","selectCategory","shortid","generate","to","onClick","LOADER_ON","LOADER_OFF","loaderOn","loaderOff","getLoader","loading","fetchData","axios","get","then","data","SHOW_ERROR","showError","loadProducts","rootSaga","ADD_PRODUCT","FETCH_PRODUCTS","addProducts","payload","getProducts","put","call","takeEvery","filterProductsByCategory","category","App","history","changeValue","push","Container","color","textAlign","Row","Col","sm","exact","render","dispatch","addValue","sagaMiddleware","createSagaMiddleware","middleware","rootReducer","combineReducers","error","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ac29e606.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nconst ProductsItem = ({ img, name, bsr_category, link }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <Card style={{ width: '10rem', marginBottom: '1rem' }}>\n            <Card.Img variant=\"top\" src={img} height=\"140\" />\n            <Card.Body>\n                <Card.Title>{bsr_category}</Card.Title>\n                <Card.Text>{shortName}</Card.Text>\n                <Card.Link\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Show More\n                </Card.Link>\n            </Card.Body>\n        </Card>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n};\n\nexport default ProductsItem;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.span`\n    display: block;\n    margin: 10px 0;\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","// actionsTypes\n\nexport const ADD_VALUE = 'productList/value/ADD_VALUE';\n\n// actions\n\nexport const addValue = value => ({\n    type: ADD_VALUE,\n    payload: value,\n});\n\n// reducers\n\nexport const valueReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_VALUE:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getValue = state => state.value;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { List } from '../../styledComponents/styled';\nimport { getValue } from '../../redux/value';\n\nconst ProductsList = ({ products, value }) => {\n    const filteredProducts =\n        value !== 'All Categories' && value\n            ? products.filter(\n                  el =>\n                      el.name.toLowerCase().includes(value.toLowerCase()) ||\n                      el.bsr_category\n                          .toLowerCase()\n                          .includes(value.toLowerCase()),\n              )\n            : products;\n\n    return (\n        <List>\n            {filteredProducts.map(el => (\n                <ProductItem {...el} key={el.asin} />\n            ))}\n        </List>\n    );\n};\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default connect(mapStateToProps)(ProductsList);\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getValue } from '../../redux/value';\n\nclass ProductsInput extends Component {\n    state = {\n        text: '',\n    };\n\n    componentDidMount() {\n        const { location } = this.props;\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n\n            this.setState({\n                text: result,\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { location } = this.props;\n\n        if (prevProps.location.pathname !== location.pathname) {\n            this.setState({\n                text: '',\n            });\n        }\n    }\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n        const { onSearch } = this.props;\n\n        this.setState(\n            {\n                [name]: value,\n            },\n            () => onSearch(value),\n        );\n    };\n\n    render() {\n        const { text } = this.state;\n\n        return (\n            <>\n                <input\n                    type=\"text\"\n                    value={text}\n                    onChange={this.handleChange}\n                    name=\"text\"\n                    className=\"form-element  text-center col-md-12\"\n                    placeholder=\"Enter name of product to search...\"\n                />\n            </>\n        );\n    }\n}\n\nProductsInput.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default compose(connect(mapStateToProps), withRouter)(ProductsInput);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\n\nconst categories = [\n    {\n        text: 'All Categories',\n        path: '/',\n    },\n    {\n        text: 'Home & Kitchen',\n        path: '/Home&Kitchen',\n    },\n    {\n        text: 'Sports & Outdoors',\n        path: '/Sports&Outdoors',\n    },\n    {\n        text: 'Health & Personal Care',\n        path: '/Health&PersonalCare',\n    },\n    {\n        text: 'Baby Products',\n        path: '/BabyProducts',\n    },\n];\n\nconst CategoryList = ({ selectCategory }) => {\n    return (\n        <>\n            <ul>\n                {categories.map(el => (\n                    <li key={shortid.generate()}>\n                        <NavLink\n                            to={{\n                                pathname: el.path,\n                                // search: location.search,\n                            }}\n                        >\n                            <ListCategoryDescription\n                                onClick={() => selectCategory(el)}\n                            >\n                                {el.text}\n                            </ListCategoryDescription>\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nCategoryList.propTypes = {\n    selectCategory: PropTypes.func.isRequired,\n};\n\nexport default withRouter(CategoryList);\n","// actionsTypes\n\nexport const LOADER_ON = 'productList/loader/LOADER_ON';\nexport const LOADER_OFF = 'productList/loader/LOADER_OFF';\n\n// actions\n\nexport const loaderOn = () => ({\n    type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n    type: LOADER_OFF,\n});\n\n// reducers\n\nexport const loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case LOADER_ON:\n            return true;\n        case LOADER_OFF:\n            return false;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getLoader = state => state.loading;\n","import axios from 'axios';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = () => axios.get(URL).then(({ data }) => data.products);\n","// actionsTypes\n\nexport const SHOW_ERROR = 'productList/error/SHOW_ERROR';\n\n// actions\n\nexport const showError = () => ({\n    type: SHOW_ERROR,\n});\n// reducers\n\nexport const errorReducer = (state = false, { type }) => {\n    switch (type) {\n        case SHOW_ERROR:\n            return true;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getErrorMessage = state => state.error;\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { loaderOn, loaderOff } from './loading';\nimport { fetchData } from '../services/fetchData';\nimport { showError } from './error';\n\n// actionsTypes\n\nexport const ADD_PRODUCT = 'productList/products/ADD_PRODUCT';\nexport const FETCH_PRODUCTS = 'productList/products/FETCH_PRODUCTS';\n\n// actions\n\nexport const addProducts = products => ({\n    type: ADD_PRODUCT,\n    payload: products,\n});\n\nexport const fetchProducts = () => ({\n    type: FETCH_PRODUCTS,\n});\n\n// reducers\n\nexport const productsReducer = (state = [], { type, payload }) => {\n    switch (type) {\n        case FETCH_PRODUCTS:\n            return state;\n        case ADD_PRODUCT:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getProducts = state => state.products;\n\n// saga\n\nfunction* loadProducts() {\n    try {\n        yield put(loaderOn());\n        const data = yield call(fetchData);\n        yield put(addProducts(data));\n        yield put(loaderOff());\n    } catch (error) {\n        yield put(loaderOff());\n        yield put(showError());\n    }\n}\n\nexport default function* rootSaga() {\n    yield takeEvery(FETCH_PRODUCTS, loadProducts);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\nimport { getProducts, fetchProducts } from '../../redux/products';\nimport { getLoader } from '../../redux/loading';\nimport { getValue, addValue } from '../../redux/value';\n\nconst filterProductsByCategory = (products, category) =>\n    products.filter(el =>\n        el.bsr_category.toLowerCase().includes(category.toLowerCase()),\n    );\n\nclass App extends Component {\n    componentDidMount() {\n        const { location, fetchData, changeValue } = this.props;\n\n        fetchData();\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n            this.onSearch(result);\n            changeValue(result);\n        }\n    }\n\n    onSearch = value => {\n        const { history, location, changeValue } = this.props;\n\n        changeValue(value);\n\n        history.push({\n            ...location,\n            search: `item=${value}`,\n        });\n    };\n\n    selectCategory = category => {\n        this.onSearch(category.text);\n    };\n\n    handleChange = value => {\n        this.onSearch(value);\n    };\n\n    render() {\n        const { loading, products } = this.props;\n\n        return (\n            <Container>\n                {loading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={10}>\n                        <ProductsInput onSearch={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={3}>\n                        <CategoryList selectCategory={this.selectCategory} />\n                    </Col>\n                    <Col sm={9}>\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                                render={props => {\n                                    return (\n                                        <ProductsList\n                                            products={products}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Home&Kitchen\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        'Home & Kitchen',\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Sports&Outdoors\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        'Sports & Outdoors',\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Health&PersonalCare\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        'Health & Personal Care',\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/BabyProducts\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        'Baby Products',\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                        </Switch>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: getProducts(state),\n    loading: getLoader(state),\n    value: getValue(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(fetchProducts()),\n    changeValue: value => dispatch(addValue(value)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(App);\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga, { productsReducer } from '../products';\nimport { loaderReducer } from '../loading';\nimport { errorReducer } from '../error';\nimport { valueReducer } from '../value';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loading: loaderReducer,\n    error: errorReducer,\n    value: valueReducer, // searchValue\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}