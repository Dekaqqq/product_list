{"version":3,"sources":["styledComponents/styled.js","components/ProdutsList/ProductsItem/ProductsItem.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","components/App/App.js","services/fetchData.js","index.js"],"names":["ListItem","styled","li","List","ul","ListCategoryDescription","p","ListItemLink","a","ListItemName","ListItemPrice","ProductsItem","img","brand","name","bsr_category","link","price","shortName","slice","className","src","alt","width","height","href","target","rel","ProductsList","products","map","el","key","asin","ProductsInput","state","text","handleChange","value","setState","handleSubmit","e","onSearch","props","preventDefault","this","onSubmit","type","onChange","placeholder","Component","CategoryList","categories","selectCategory","shortid","generate","onClick","bind","App","isLoading","error","handleError","msg","toast","position","POSITION","TOP_CENTER","category","url","axios","get","then","data","catch","message","finally","reduce","acc","includes","push","getUniqueCategories","filteredProducts","filter","toLowerCase","color","style","textAlign","autoClose","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57719737.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.p`\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListItem,\n    ListItemLink,\n    ListItemName,\n    ListItemPrice,\n} from '../../../styledComponents/styled';\n\nconst ProductsItem = ({ img, brand, name, bsr_category, link, price }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <ListItem className=\"col-md-4\">\n            <img\n                src={img}\n                alt={brand}\n                className=\"list-item__img\"\n                width=\"120\"\n                height=\"150\"\n            />\n            <h3 className=\"list-item__headline\">{bsr_category}</h3>\n            <ListItemName className=\"list-item__name\">{shortName}</ListItemName>\n            <ListItemLink\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"list-item__link\"\n            >\n                Show Product\n            </ListItemLink>\n            <ListItemPrice className=\"list-item__price\">\n                {price} $\n            </ListItemPrice>\n        </ListItem>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    brand: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n};\n\nexport default ProductsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { List } from '../../styledComponents/styled';\n\nconst ProductsList = ({ products }) => (\n    <List className=\"col-sm-10 col-md-8\">\n        {products.map(el => (\n            <ProductItem {...el} key={el.asin} />\n        ))}\n    </List>\n);\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default ProductsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductsInput extends Component {\n    state = {\n        text: '',\n    };\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = e => {\n        const { text } = this.state;\n        const { onSearch } = this.props;\n\n        e.preventDefault();\n\n        onSearch(text);\n\n        this.setState({\n            text: '',\n        });\n    };\n\n    render() {\n        const { text } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className=\"search-form row\">\n                <input\n                    type=\"text\"\n                    value={text}\n                    name=\"text\"\n                    onChange={this.handleChange}\n                    className=\"form-element  text-center col-md-10\"\n                    placeholder=\"Enter name of product to search...\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"form-element btn btn-primary button text-center col-md-3 col-sm-3\"\n                >\n                    Find\n                </button>\n            </form>\n        );\n    }\n}\n\nProductsInput.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default ProductsInput;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\n\nconst CategoryList = ({ categories, selectCategory }) => {\n    return (\n        <ul className=\"col-sm-2 col-md-4\">\n            {categories.map(el => (\n                <li key={shortid.generate()}>\n                    <ListCategoryDescription\n                        onClick={selectCategory.bind(null, el)}\n                    >\n                        {el}\n                    </ListCategoryDescription>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nCategoryList.propTypes = {\n    categories: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    selectCategory: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { fetchData, URL } from '../../services/fetchData';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\n\nconst getUniqueCategories = products => {\n    return products.reduce((acc, el) => {\n        if (!acc.includes(el.bsr_category)) acc.push(el.bsr_category);\n        return acc;\n    }, []);\n};\n\nclass App extends Component {\n    state = {\n        isLoading: false,\n        error: null,\n        products: [],\n        value: '',\n    };\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        fetchData(URL)\n            .then(({ products }) => this.setState({ products }))\n            .catch(error => {\n                this.setState({ error: error.message });\n                this.handleError(error.message);\n            })\n            .finally(() => this.setState({ isLoading: false }));\n    }\n\n    handleError = msg => {\n        toast.error(msg, {\n            position: toast.POSITION.TOP_CENTER,\n        });\n    };\n\n    onSearch = value => {\n        this.setState({ value });\n    };\n\n    selectCategory = category => {\n        this.onSearch(category);\n    };\n\n    render() {\n        const { isLoading, error, products, value } = this.state;\n        const categories = getUniqueCategories(products);\n\n        const filteredProducts = value\n            ? products.filter(\n                  el =>\n                      el.name.toLowerCase().includes(value.toLowerCase()) ||\n                      el.bsr_category\n                          .toLowerCase()\n                          .includes(value.toLowerCase()),\n              )\n            : products;\n\n        return (\n            <div className=\"container\">\n                {isLoading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                {error && <ToastContainer autoClose={1500} />}\n                <ProductsInput onSearch={this.onSearch} />\n                <div className=\"row\">\n                    <CategoryList\n                        categories={categories}\n                        selectCategory={this.selectCategory}\n                    />\n                    {products.length > 0 && (\n                        <ProductsList products={filteredProducts} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import axios from 'axios';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = url => axios.get(url).then(({ data }) => data);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}