{"version":3,"sources":["components/ProdutsList/ProductsItem/ProductsItem.js","styledComponents/styled.js","redux/loading.js","services/fetchData.js","redux/error.js","redux/products.js","redux/value.js","redux/category.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","components/App/App.js","redux/store/store.js","index.js"],"names":["ProductsItem","img","name","bsr_category","link","shortName","slice","Card","style","width","marginBottom","Img","variant","src","height","Body","Title","Text","Link","href","target","rel","styled","li","List","ul","ListCategoryDescription","span","a","p","loaderOn","type","loaderOff","getLoader","state","loading","fetchData","axios","get","then","data","products","showError","loadProducts","rootSaga","FETCH_PRODUCTS","addProducts","payload","getProducts","put","call","takeEvery","getValue","value","addCategory","category","getCategory","connect","filteredByCategory","filter","el","toLowerCase","includes","filterProductsByCategory","filteredProducts","map","key","asin","compose","withRouter","onChange","className","placeholder","categories","text","path","dispatch","setCategory","location","shortid","generate","to","pathname","search","onClick","App","onSearch","props","history","changeValue","push","handleChange","this","changeCategory","result","queryString","parse","item","Container","color","textAlign","Row","Col","sm","component","ProductsList","Component","addValue","sagaMiddleware","createSagaMiddleware","middleware","rootReducer","combineReducers","error","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.277c4d26.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nconst ProductsItem = ({ img, name, bsr_category, link }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <Card style={{ width: '10rem', marginBottom: '1rem' }}>\n            <Card.Img variant=\"top\" src={img} height=\"140\" />\n            <Card.Body>\n                <Card.Title>{bsr_category}</Card.Title>\n                <Card.Text>{shortName}</Card.Text>\n                <Card.Link\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Show More\n                </Card.Link>\n            </Card.Body>\n        </Card>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n};\n\nexport default ProductsItem;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.span`\n    display: block;\n    margin: 10px 0;\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","// actionsTypes\n\nexport const LOADER_ON = 'LOADER_ON';\nexport const LOADER_OFF = 'LOADER_OFF';\n\n// actions\n\nexport const loaderOn = () => ({\n    type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n    type: LOADER_OFF,\n});\n\n// reducers\n\nexport const loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case LOADER_ON:\n            return true;\n        case LOADER_OFF:\n            return false;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getLoader = state => state.loading;\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = () => axios.get(URL).then(({ data }) => data.products);\n\nexport const getSearchValue = props => queryString.parse(props).item;\n","// actionsTypes\n\nexport const SHOW_ERROR = 'SHOW_ERROR';\n\n// actions\n\nexport const showError = () => ({\n    type: SHOW_ERROR,\n});\n// reducers\n\nexport const errorReducer = (state = false, { type }) => {\n    switch (type) {\n        case SHOW_ERROR:\n            return true;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getErrorMessage = state => state.error;\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { loaderOn, loaderOff } from './loading';\nimport { fetchData } from '../services/fetchData';\nimport { showError } from './error';\n\n// actionsTypes\n\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n\n// actions\n\nexport const addProducts = products => ({\n    type: ADD_PRODUCT,\n    payload: products,\n});\n\nexport const fetchProducts = () => ({\n    type: FETCH_PRODUCTS,\n});\n\n// reducers\n\nexport const productsReducer = (state = [], { type, payload }) => {\n    switch (type) {\n        case FETCH_PRODUCTS:\n            return state;\n        case ADD_PRODUCT:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getProducts = state => state.products;\n\n// saga\n\nfunction* loadProducts() {\n    try {\n        yield put(loaderOn());\n        const data = yield call(fetchData);\n        yield put(addProducts(data));\n        yield put(loaderOff());\n    } catch (error) {\n        yield put(loaderOff());\n        yield put(showError());\n    }\n}\n\nexport default function* rootSaga() {\n    yield takeEvery(FETCH_PRODUCTS, loadProducts);\n}\n","// actionsTypes\n\nexport const ADD_VALUE = 'ADD_VALUE';\n\n// actions\n\nexport const addValue = value => ({\n    type: ADD_VALUE,\n    payload: value,\n});\n\n// reducers\n\nexport const valueReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_VALUE:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getValue = state => state.value;\n","// actionsTypes\n\nexport const ADD_CATEGORY = 'ADD_CATEGORY';\n\n// actions\n\nexport const addCategory = category => ({\n    type: ADD_CATEGORY,\n    payload: category,\n});\n\n// reducers\n\nexport const categoryReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_CATEGORY:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getCategory = state => state.category;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { List } from '../../styledComponents/styled';\nimport { getProducts } from '../../redux/products';\nimport { getValue } from '../../redux/value';\nimport { getCategory } from '../../redux/category';\n\nconst filterProductsByCategory = (products, category) =>\n    products.filter(el =>\n        el.bsr_category.toLowerCase().includes(category.toLowerCase()),\n    );\n\nconst ProductsList = ({ products, value, category }) => {\n    const filteredByCategory =\n        category !== 'All Categories'\n            ? filterProductsByCategory(products, category)\n            : products;\n\n    const filteredProducts = value\n        ? filteredByCategory.filter(el =>\n              el.name.toLowerCase().includes(value.toLowerCase()),\n          )\n        : filteredByCategory;\n\n    return (\n        <List>\n            {filteredProducts.map(el => (\n                <ProductItem {...el} key={el.asin} />\n            ))}\n        </List>\n    );\n};\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    products: getProducts(state),\n    value: getValue(state),\n    category: getCategory(state),\n});\n\nexport default connect(mapStateToProps)(ProductsList);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getValue } from '../../redux/value';\n\nconst ProductsInput = ({ value, onChange }) => (\n    <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        name=\"text\"\n        className=\"form-element\"\n        placeholder=\"Enter name of product to search...\"\n    />\n);\n\nProductsInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default compose(connect(mapStateToProps), withRouter)(ProductsInput);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport shortid from 'shortid';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\nimport { getValue } from '../../redux/value';\nimport { addCategory } from '../../redux/category';\nimport { getProducts } from '../../redux/products';\n\nconst categories = [\n    {\n        text: 'All Categories',\n        path: '/',\n    },\n    {\n        text: 'Home & Kitchen',\n        path: '/Home & Kitchen',\n    },\n    {\n        text: 'Sports & Outdoors',\n        path: '/Sports & Outdoors',\n    },\n    {\n        text: 'Health & Personal Care',\n        path: '/Health & PersonalCare',\n    },\n    {\n        text: 'Baby Products',\n        path: '/Baby Products',\n    },\n];\n\nconst CategoryList = ({ location, value, setCategory }) => {\n    return (\n        <>\n            <ul>\n                {categories.map(el => (\n                    <li key={shortid.generate()}>\n                        <NavLink\n                            to={{\n                                pathname: el.path,\n                                search: value ? location.search : null,\n                            }}\n                        >\n                            <ListCategoryDescription\n                                onClick={() => setCategory(el.text)}\n                            >\n                                {el.text}\n                            </ListCategoryDescription>\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    products: getProducts(state),\n    value: getValue(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setCategory: category => dispatch(addCategory(category)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(CategoryList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\nimport { getProducts, fetchProducts } from '../../redux/products';\nimport { getLoader } from '../../redux/loading';\nimport { getValue, addValue } from '../../redux/value';\nimport { addCategory, getCategory } from '../../redux/category';\nimport { getSearchValue } from '../../services/fetchData';\n\nclass App extends Component {\n    componentDidMount() {\n        const { location, fetchData, changeCategory } = this.props;\n\n        fetchData();\n\n        changeCategory(location.pathname.slice(1));\n\n        if (location.search) {\n            const result = getSearchValue(location.search);\n\n            this.onSearch(result);\n        }\n    }\n\n    onSearch = value => {\n        const { history, location, changeValue } = this.props;\n\n        changeValue(value);\n\n        history.push({\n            ...location,\n            search: `item=${value}`,\n        });\n    };\n\n    handleChange = ({ target }) => {\n        const { value } = target;\n\n        this.onSearch(value);\n    };\n\n    render() {\n        const { loading } = this.props;\n\n        return (\n            <Container>\n                {loading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={10}>\n                        <ProductsInput onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={3}>\n                        <CategoryList />\n                    </Col>\n                    <Col sm={9}>\n                        <Route path=\"/\" component={ProductsList} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: getProducts(state),\n    loading: getLoader(state),\n    value: getValue(state),\n    category: getCategory(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(fetchProducts()),\n    changeValue: value => dispatch(addValue(value)),\n    changeCategory: category => dispatch(addCategory(category)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(App);\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga, { productsReducer } from '../products';\nimport { loaderReducer } from '../loading';\nimport { errorReducer } from '../error';\nimport { valueReducer } from '../value';\nimport { categoryReducer } from '../category';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loading: loaderReducer,\n    error: errorReducer,\n    value: valueReducer, // searchValue\n    category: categoryReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter basename=\"/\">\n            <App />\n        </HashRouter>\n    </Provider>,\n\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}