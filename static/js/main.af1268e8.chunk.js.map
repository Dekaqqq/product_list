{"version":3,"sources":["styledComponents/styled.js","components/ProdutsList/ProductsItem/ProductsItem.js","redux/products/types.js","redux/products/reducers.js","redux/products/selectors.js","redux/loader/types.js","redux/loader/selectors.js","redux/loader/actions.js","redux/loader/index.js","redux/loader/reducers.js","services/fetchData.js","redux/products/actions.js","redux/error/types.js","redux/error/actions.js","redux/products/operations.js","redux/products/index.js","redux/value/selectors.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","redux/value/types.js","redux/value/action.js","components/App/App.js","redux/error/index.js","redux/error/reducers.js","redux/value/reducers.js","redux/store/store.js","index.js"],"names":["ListItem","styled","li","List","ul","ListCategoryDescription","span","ListItemLink","a","ListItemName","p","ListItemPrice","ProductsItem","img","brand","name","bsr_category","link","price","shortName","slice","className","src","alt","width","height","href","target","rel","ADD_PRODUCT","FETCH_PRODUCTS","productsReducers","state","type","payload","getProducts","products","fff","LOADER_ON","LOADER_OFF","getLoader","loading","loaderOn","loaderOff","loadingReducer","fetchData","axios","get","then","data","addProducts","fetchProducts","SHOW_ERROR","showError","message","loadProducts","rootSaga","put","loadingActions","call","takeEvery","productsReducer","getValue","value","connect","productsSelectors","filteredProducts","filter","el","toLowerCase","includes","map","key","asin","ProductsInput","text","handleChange","setState","handleSubmit","e","onSearch","props","preventDefault","this","onSubmit","onChange","placeholder","Component","CategoryList","categories","selectCategory","shortid","generate","to","replace","onClick","ADD_VALUE","addValue","App","history","location","changeValue","push","search","category","searchValue","index","lastIndexOf","result","substring","reduce","acc","getUniqueCategories","color","style","textAlign","path","exact","render","compose","dispatch","productsActions","withRouter","errorReducer","valueReducer","sagaMiddleware","createSagaMiddleware","middleware","rootReducer","combineReducers","error","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.af1268e8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.span`\n    display: block;\n    margin: 10px 0;\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListItem,\n    ListItemLink,\n    ListItemName,\n    ListItemPrice,\n} from '../../../styledComponents/styled';\n\nconst ProductsItem = ({ img, brand, name, bsr_category, link, price }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <ListItem className=\"col-md-4\">\n            <img\n                src={img}\n                alt={brand}\n                className=\"list-item__img\"\n                width=\"120\"\n                height=\"150\"\n            />\n            <h3 className=\"list-item__headline\">{bsr_category}</h3>\n            <ListItemName className=\"list-item__name\">{shortName}</ListItemName>\n            <ListItemLink\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"list-item__link\"\n            >\n                Show Product\n            </ListItemLink>\n            <ListItemPrice className=\"list-item__price\">\n                {price} $\n            </ListItemPrice>\n        </ListItem>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    brand: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n};\n\nexport default ProductsItem;\n","export const ADD_PRODUCT = 'productList/products/ADD_PRODUCT';\nexport const FETCH_PRODUCTS = 'productList/products/FETCH_PRODUCTS';\n","import { ADD_PRODUCT, FETCH_PRODUCTS } from './types';\n\nconst productsReducers = (state = [], { type, payload }) => {\n    switch (type) {\n        case FETCH_PRODUCTS:\n            return state;\n        case ADD_PRODUCT:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default productsReducers;\n","export const getProducts = state => state.products;\n\nexport const fff = () => {};\n","export const LOADER_ON = 'productList/loader/LOADER_ON';\nexport const LOADER_OFF = 'productList/loader/LOADER_OFF';\n","const getLoader = state => state.loading;\n\nexport default getLoader;\n","import { LOADER_ON, LOADER_OFF } from './types';\n\nexport const loaderOn = () => ({\n    type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n    type: LOADER_OFF,\n});\n","import loadingReducer from './reducers';\n\nimport * as loadingSelectors from './selectors';\nimport * as loadingActions from './actions';\nimport * as loadingType from './types';\n\nexport { loadingSelectors, loadingActions, loadingType };\n\nexport default loadingReducer;\n","import { LOADER_OFF, LOADER_ON } from './types';\n\nconst loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case LOADER_ON:\n            return true;\n        case LOADER_OFF:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loaderReducer;\n","import axios from 'axios';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = () => axios.get(URL).then(({ data }) => data.products);\n","import { ADD_PRODUCT, FETCH_PRODUCTS } from './types';\n\nexport const addProducts = products => ({\n    type: ADD_PRODUCT,\n    payload: products,\n});\n\nexport const fetchProducts = () => ({\n    type: FETCH_PRODUCTS,\n});\n","const SHOW_ERROR = 'productList/error/SHOW_ERROR';\n\nexport default SHOW_ERROR;\n","import SHOW_ERROR from './types';\n\nconst showError = message => ({\n    type: SHOW_ERROR,\n    payload: message,\n});\n\nexport default showError;\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { loadingActions } from '../loader';\nimport { fetchData } from '../../services/fetchData';\nimport { addProducts } from './actions';\nimport showError from '../error/actions';\nimport { FETCH_PRODUCTS } from './types';\n\nfunction* loadProducts() {\n    try {\n        yield put(loadingActions.loaderOn());\n        const data = yield call(fetchData);\n        yield put(addProducts(data));\n        yield put(loadingActions.loaderOff());\n    } catch (error) {\n        yield put(loadingActions.loaderOff());\n        yield put(showError());\n    }\n}\n\nexport default function* rootSaga() {\n    yield takeEvery(FETCH_PRODUCTS, loadProducts);\n}\n","import productsReducer from './reducers';\n\nimport * as productsSelectors from './selectors';\nimport * as productsOperations from './operations';\nimport * as productsActions from './actions';\nimport * as productsType from './types';\n\nexport { productsSelectors, productsOperations, productsActions, productsType };\n\nexport default productsReducer;\n","const getValue = state => state.value;\n\nexport default getValue;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { productsSelectors } from '../../redux/products';\nimport { List } from '../../styledComponents/styled';\nimport getValue from '../../redux/value/selectors';\n\nconst ProductsList = ({ products, value }) => {\n    const filteredProducts = value\n        ? products.filter(\n              el =>\n                  el.name.toLowerCase().includes(value.toLowerCase()) ||\n                  el.bsr_category.toLowerCase().includes(value.toLowerCase()),\n          )\n        : products;\n\n    return (\n        <List className=\"col-sm-10 col-md-8\">\n            {filteredProducts.map(el => (\n                <ProductItem {...el} key={el.asin} />\n            ))}\n        </List>\n    );\n};\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    products: productsSelectors.getProducts(state),\n    value: getValue(state),\n});\n\nexport default connect(mapStateToProps)(ProductsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductsInput extends Component {\n    state = {\n        text: '',\n    };\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = e => {\n        const { text } = this.state;\n        const { onSearch } = this.props;\n\n        e.preventDefault();\n\n        onSearch(text);\n\n        this.setState({\n            text: '',\n        });\n    };\n\n    render() {\n        const { text } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className=\"search-form row\">\n                <input\n                    type=\"text\"\n                    value={text}\n                    name=\"text\"\n                    onChange={this.handleChange}\n                    className=\"form-element  text-center col-md-10\"\n                    placeholder=\"Enter name of product to search...\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"form-element btn btn-primary text-center col-md-3 col-sm-3\"\n                >\n                    Find\n                </button>\n            </form>\n        );\n    }\n}\n\nProductsInput.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default ProductsInput;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\n\nconst CategoryList = ({ categories, selectCategory }) => {\n    return (\n        <>\n            <ul className=\"col-sm-2 col-md-4\">\n                {categories.map(el => (\n                    <li key={shortid.generate()}>\n                        <NavLink to={el.replace(/\\s/g, '')}>\n                            <ListCategoryDescription\n                                onClick={() => selectCategory(el)}\n                            >\n                                {el}\n                            </ListCategoryDescription>\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nCategoryList.propTypes = {\n    categories: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    selectCategory: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;\n","const ADD_VALUE = 'productList/value/ADD_VALUE';\n\nexport default ADD_VALUE;\n","import ADD_VALUE from './types';\n\nconst addValue = value => ({\n    type: ADD_VALUE,\n    payload: value,\n});\n\nexport default addValue;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\nimport { productsSelectors, productsActions } from '../../redux/products';\nimport getLoader from '../../redux/loader/selectors';\nimport getValue from '../../redux/value/selectors';\nimport addValue from '../../redux/value/action';\n\nconst getUniqueCategories = products => {\n    return products.reduce((acc, el) => {\n        if (!acc.includes(el.bsr_category)) acc.push(el.bsr_category);\n        return acc;\n    }, []);\n};\n\nclass App extends Component {\n    componentDidMount() {\n        const { location, fetchData } = this.props;\n\n        fetchData();\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n            this.onSearch(result);\n        }\n    }\n\n    onSearch = value => {\n        const { history, location, changeValue } = this.props;\n\n        changeValue(value);\n\n        if (value) {\n            history.push({\n                ...location,\n                search: `item=${value}`,\n            });\n        }\n    };\n\n    selectCategory = category => {\n        this.onSearch(category);\n    };\n\n    render() {\n        const { loading, products } = this.props;\n        const categories = getUniqueCategories(products);\n\n        return (\n            <div className=\"container\">\n                {loading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                <ProductsInput onSearch={this.onSearch} />\n                <div className=\"row\">\n                    <CategoryList\n                        categories={categories}\n                        selectCategory={this.selectCategory}\n                    />\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Home&Kitchen\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Sports&Outdoors\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Health&PersonalCare\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/BabyProducts\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: productsSelectors.getProducts(state),\n    loading: getLoader(state),\n    value: getValue(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(productsActions.fetchProducts()),\n    changeValue: value => dispatch(addValue(value)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(App);\n","import errorReducer from './reducers';\n\nimport * as errorSelectors from './selectors';\nimport * as errorActions from './actions';\nimport * as errorType from './types';\n\nexport { errorSelectors, errorActions, errorType };\n\nexport default errorReducer;\n","import SHOW_ERROR from './types';\n\nconst errorReducer = (state = false, { type, payload }) => {\n    switch (type) {\n        case SHOW_ERROR:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default errorReducer;\n","import ADD_VALUE from './types';\n\nconst valueReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_VALUE:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default valueReducer;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport productsReducer from '../products';\nimport loadingReducer from '../loader';\nimport errorReducer from '../error';\nimport valueReducer from '../value/reducers';\nimport rootSaga from '../products/operations';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loading: loadingReducer,\n    error: errorReducer,\n    value: valueReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}