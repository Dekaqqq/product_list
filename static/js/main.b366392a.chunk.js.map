{"version":3,"sources":["components/ProdutsList/ProductsItem/ProductsItem.js","styledComponents/styled.js","redux/value.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","redux/loading.js","services/fetchData.js","redux/error.js","redux/products.js","redux/category.js","components/App/App.js","redux/store/store.js","index.js"],"names":["ProductsItem","img","name","bsr_category","link","shortName","slice","Card","style","width","marginBottom","Img","variant","src","height","Body","Title","Text","Link","href","target","rel","styled","li","List","ul","ListCategoryDescription","span","getValue","a","p","state","value","connect","products","filteredProducts","filter","el","toLowerCase","includes","map","key","asin","ProductsInput","text","handleChange","onSearch","props","setState","location","this","search","searchValue","index","lastIndexOf","result","substring","type","onChange","className","placeholder","Component","withRouter","categories","path","compose","selectCategory","shortid","generate","to","pathname","onClick","loaderOn","loaderOff","getLoader","loading","fetchData","axios","get","then","data","showError","loadProducts","rootSaga","FETCH_PRODUCTS","addProducts","payload","getProducts","put","call","takeEvery","getCategory","category","filterProductsByCategory","App","history","changeValue","push","changeCategory","Container","color","textAlign","Row","Col","sm","exact","render","dispatch","addValue","addCategory","sagaMiddleware","createSagaMiddleware","middleware","rootReducer","combineReducers","error","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename","document","getElementById"],"mappings":"wVAgCeA,EA5BM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,KACvCC,EAAYH,EAAKI,MAAM,EAAG,IAEhC,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,aAAc,SACzC,kBAACH,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAMC,IAAKZ,EAAKa,OAAO,QACzC,kBAACP,EAAA,EAAKQ,KAAN,KACI,kBAACR,EAAA,EAAKS,MAAN,KAAab,GACb,kBAACI,EAAA,EAAKU,KAAN,KAAYZ,GACZ,kBAACE,EAAA,EAAKW,KAAN,CACIC,KAAMf,EACNgB,OAAO,SACPC,IAAI,uBAHR,gB,47BCXQC,IAAOC,GAAV,KAAd,IAMMC,EAAOF,IAAOG,GAAV,KAOJC,EAA0BJ,IAAOK,KAAV,KCSvBC,GDFeN,IAAOO,EAAV,KASGP,IAAOQ,EAAV,KAKIR,IAAOQ,EAAV,KCZF,SAAAC,GAAK,OAAIA,EAAMC,QCgBxBC,eAJS,SAAAF,GAAK,MAAK,CAC9BC,MAAOJ,EAASG,MAGLE,EAjCM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUF,EAAY,EAAZA,MACxBG,EACQ,mBAAVH,GAA8BA,EACxBE,EAASE,QACL,SAAAC,GAAE,OACEA,EAAGnC,KAAKoC,cAAcC,SAASP,EAAMM,gBACrCD,EAAGlC,aACEmC,cACAC,SAASP,EAAMM,kBAE5BJ,EAEV,OACI,kBAACV,EAAD,KACKW,EAAiBK,KAAI,SAAAH,GAAE,OACpB,kBAAC,EAAD,iBAAiBA,EAAjB,CAAqBI,IAAKJ,EAAGK,eClBvCC,E,2MACFZ,MAAQ,CACJa,KAAM,I,EAiBVC,aAAe,YAAiB,IAAdzB,EAAa,EAAbA,OACNlB,EAAgBkB,EAAhBlB,KAAM8B,EAAUZ,EAAVY,MACNc,EAAa,EAAKC,MAAlBD,SAER,EAAKE,SAAL,eAES9C,EAAO8B,IAEZ,kBAAMc,EAASd,O,mFAtBF,IACTiB,EAAaC,KAAKH,MAAlBE,SAER,GAAIA,EAASE,OAAQ,CACjB,IAAMC,EAAcH,EAASE,OACvBE,EAAQD,EAAYE,YAAY,KAChCC,EAASH,EAAYI,UAAUH,EAAQ,GAE7CH,KAAKF,SAAS,CACVJ,KAAMW,O,+BAiBR,IACEX,EAASM,KAAKnB,MAAda,KAER,OACI,oCACI,2BACIa,KAAK,OACLzB,MAAOY,EACPc,SAAUR,KAAKL,aACf3C,KAAK,OACLyD,UAAU,sCACVC,YAAY,4C,GA1CJC,aAqDbC,cAAWnB,G,iBChDpBoB,EAAa,CACf,CACInB,KAAM,iBACNoB,KAAM,KAEV,CACIpB,KAAM,iBACNoB,KAAM,iBAEV,CACIpB,KAAM,oBACNoB,KAAM,oBAEV,CACIpB,KAAM,yBACNoB,KAAM,wBAEV,CACIpB,KAAM,gBACNoB,KAAM,kBAqCCC,oBAAQhC,aAJC,SAAAF,GAAK,MAAK,CAC9BC,MAAOJ,EAASG,OAG6B+B,IAAlCG,EAjCM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,eAAgBjB,EAAsB,EAAtBA,SAAUjB,EAAY,EAAZA,MAC9C,OACI,oCACI,4BACK+B,EAAWvB,KAAI,SAAAH,GAAE,OACd,wBAAII,IAAK0B,IAAQC,YACb,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAUjC,EAAG2B,KACbb,OAAQnB,EAAQiB,EAASE,OAAS,OAGtC,kBAACzB,EAAD,CACI6C,QAAS,kBAAML,EAAe7B,KAE7BA,EAAGO,gB,yBCxCvB4B,EAAW,iBAAO,CAC3Bf,KANqB,cASZgB,EAAY,iBAAO,CAC5BhB,KATsB,eA2BbiB,EAAY,SAAA3C,GAAK,OAAIA,EAAM4C,S,iBC1B3BC,EAAY,kBAAMC,IAAMC,IAFlB,4CAE2BC,MAAK,qBAAGC,KAAgB9C,aCEzD+C,EAAY,iBAAO,CAC5BxB,KALsB,e,WCsChByB,I,WAYeC,IA5CZC,GAAiB,iBAIjBC,GAAc,SAAAnD,GAAQ,MAAK,CACpCuB,KANuB,cAOvB6B,QAASpD,IAsBAqD,GAAc,SAAAxD,GAAK,OAAIA,EAAMG,UAI1C,SAAUgD,KAAV,uEAEQ,OAFR,kBAEcM,YAAIhB,KAFlB,OAGqB,OAHrB,SAG2BiB,YAAKb,GAHhC,OAIQ,OADMI,EAHd,gBAIcQ,YAAIH,GAAYL,IAJ9B,OAKQ,OALR,UAKcQ,YAAIf,KALlB,gCAOQ,OAPR,oCAOce,YAAIf,KAPlB,QAQQ,OARR,UAQce,YAAIP,KARlB,sDAYe,SAAUE,KAAV,iEACX,OADW,SACLO,YAAUN,GAAgBF,IADrB,uCClDR,IAsBMS,GAAc,SAAA5D,GAAK,OAAIA,EAAM6D,U,+NCP1C,IAAMC,GAA2B,SAAC3D,EAAU0D,GAAX,OAC7B1D,EAASE,QAAO,SAAAC,GAAE,OACdA,EAAGlC,aAAamC,cAAcC,SAASqD,EAAStD,mBAGlDwD,G,2MAeFhD,SAAW,SAAAd,GAAU,IAAD,EAC2B,EAAKe,MAAxCgD,EADQ,EACRA,QAAS9C,EADD,EACCA,UAEjB+C,EAHgB,EACWA,aAEfhE,GAEZ+D,EAAQE,K,2VAAR,IACOhD,EADP,CAEIE,OAAO,QAAD,OAAUnB,O,EAIxBkC,eAAiB,SAAA0B,IAGbM,EAF2B,EAAKnD,MAAxBmD,gBAEON,EAAShD,O,EAG5BC,aAAe,SAAAb,GACX,EAAKc,SAASd,I,mFAhCG,IAAD,EAC6BkB,KAAKH,MAA1CE,EADQ,EACRA,SAAU2B,EADF,EACEA,UAAWoB,EADb,EACaA,YAI7B,GAFApB,IAEI3B,EAASE,OAAQ,CACjB,IAAMC,EAAcH,EAASE,OACvBE,EAAQD,EAAYE,YAAY,KAChCC,EAASH,EAAYI,UAAUH,EAAQ,GAC7CH,KAAKJ,SAASS,GACdyC,EAAYzC,M,+BAyBV,IAAD,EACmCL,KAAKH,MAArC4B,EADH,EACGA,QAASzC,EADZ,EACYA,SAAU0D,EADtB,EACsBA,SAE3B,OACI,kBAACO,EAAA,EAAD,KACKxB,GACG,kBAAC,IAAD,CACIlB,KAAK,WACL2C,MAAM,UACN5F,MAAO,CAAE6F,UAAW,YAG5B,kBAACC,EAAA,EAAD,CAAK3C,UAAU,6BACX,kBAAC4C,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,CAAe1D,SAAUI,KAAKL,iBAGtC,kBAACyD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,CAActC,eAAgBhB,KAAKgB,kBAEvC,kBAACqC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxC,KAAK,IACLyC,OAAK,EACLC,OAAQ,SAAA3D,GACJ,OACI,kBAAC,EAAD,eACIb,SAAUA,GACNa,OAKpB,kBAAC,IAAD,CACIiB,KAAK,gBACL0C,OAAQ,SAAA3D,GACJ,IAAMZ,EAAmB0D,GACrB3D,EACA0D,GAGJ,OACI,kBAAC,EAAD,eACI1D,SAAUC,GACNY,OAKpB,kBAAC,IAAD,CACIiB,KAAK,mBACL0C,OAAQ,SAAA3D,GACJ,IAAMZ,EAAmB0D,GACrB3D,EACA0D,GAGJ,OACI,kBAAC,EAAD,eACI1D,SAAUC,GACNY,OAKpB,kBAAC,IAAD,CACIiB,KAAK,uBACL0C,OAAQ,SAAA3D,GACJ,IAAMZ,EAAmB0D,GACrB3D,EACA0D,GAGJ,OACI,kBAAC,EAAD,eACI1D,SAAUC,GACNY,OAKpB,kBAAC,IAAD,CACIiB,KAAK,gBACL0C,OAAQ,SAAA3D,GACJ,IAAMZ,EAAmB0D,GACrB3D,EACA0D,GAGJ,OACI,kBAAC,EAAD,eACI1D,SAAUC,GACNY,e,GAlI9Bc,aA4JHI,qBACXhC,aAdoB,SAAAF,GAAK,MAAK,CAC9BG,SAAUqD,GAAYxD,GACtB4C,QAASD,EAAU3C,GACnBC,MAAOJ,EAASG,GAChB6D,SAAUD,GAAY5D,OAGC,SAAA4E,GAAQ,MAAK,CACpC/B,UAAW,kBAAM+B,EF5Je,CAChClD,KAAM2B,ME4JNY,YAAa,SAAAhE,GAAK,OAAI2E,ETxKF,SAAA3E,GAAK,MAAK,CAC9ByB,KALqB,YAMrB6B,QAAStD,GSsKsB4E,CAAS5E,KACxCkE,eAAgB,SAAAN,GAAQ,OAAIe,EDzKL,SAAAf,GAAQ,MAAK,CACpCnC,KALwB,eAMxB6B,QAASM,GCuK4BiB,CAAYjB,SAKjD9B,IAFWG,CAGb6B,I,kBC5KIgB,GAAiBC,eAEjBC,GAAa,CAACF,IAEdG,GAAcC,0BAAgB,CAChChF,SHS2B,WAAoC,IAAnCH,EAAkC,uDAA1B,GAA0B,yCAApB0B,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QAChD,OAAQ7B,GACJ,KAAK2B,GACD,OAAOrD,EACX,IApBmB,cAqBf,OAAOuD,EACX,QACI,OAAOvD,IGff4C,QNEyB,WAA8B,IAA7B5C,EAA4B,iGAAX0B,EAAW,EAAXA,KAC3C,OAAQA,GACJ,IAjBiB,YAkBb,OAAO,EACX,IAlBkB,aAmBd,OAAO,EACX,QACI,OAAO1B,IMRfoF,MJLwB,WAA8B,IAA7BpF,EAA4B,iGAAX0B,EAAW,EAAXA,KAC1C,OAAQA,GACJ,IAXkB,aAYd,OAAO,EACX,QACI,OAAO1B,IICfC,MVJwB,WAAoC,IAAnCD,EAAkC,uDAA1B,GAA0B,yCAApB0B,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QAC7C,OAAQ7B,GACJ,IAbiB,YAcb,OAAO6B,EACX,QACI,OAAOvD,IUAf6D,SFL2B,WAAoC,IAAnC7D,EAAkC,uDAA1B,GAA0B,yCAApB0B,EAAoB,EAApBA,KAAM6B,EAAc,EAAdA,QAChD,OAAQ7B,GACJ,IAboB,eAchB,OAAO6B,EACX,QACI,OAAOvD,MEGbqF,GAAQC,sBACVJ,GACAK,+BAAoBC,kBAAe,WAAf,EAAmBP,MAG3CF,GAAeU,IAAIrC,IAEJiC,UCnBfK,IAASf,OACL,kBAAC,IAAD,CAAYgB,SAAS,KACjB,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,GAAD,QAGRO,SAASC,eAAe,U","file":"static/js/main.b366392a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nconst ProductsItem = ({ img, name, bsr_category, link }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <Card style={{ width: '10rem', marginBottom: '1rem' }}>\n            <Card.Img variant=\"top\" src={img} height=\"140\" />\n            <Card.Body>\n                <Card.Title>{bsr_category}</Card.Title>\n                <Card.Text>{shortName}</Card.Text>\n                <Card.Link\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Show More\n                </Card.Link>\n            </Card.Body>\n        </Card>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n};\n\nexport default ProductsItem;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.span`\n    display: block;\n    margin: 10px 0;\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","// actionsTypes\n\nexport const ADD_VALUE = 'ADD_VALUE';\n\n// actions\n\nexport const addValue = value => ({\n    type: ADD_VALUE,\n    payload: value,\n});\n\n// reducers\n\nexport const valueReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_VALUE:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getValue = state => state.value;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { List } from '../../styledComponents/styled';\nimport { getValue } from '../../redux/value';\n\nconst ProductsList = ({ products, value }) => {\n    const filteredProducts =\n        value !== 'All Categories' && value\n            ? products.filter(\n                  el =>\n                      el.name.toLowerCase().includes(value.toLowerCase()) ||\n                      el.bsr_category\n                          .toLowerCase()\n                          .includes(value.toLowerCase()),\n              )\n            : products;\n\n    return (\n        <List>\n            {filteredProducts.map(el => (\n                <ProductItem {...el} key={el.asin} />\n            ))}\n        </List>\n    );\n};\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default connect(mapStateToProps)(ProductsList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ProductsInput extends Component {\n    state = {\n        text: '',\n    };\n\n    componentDidMount() {\n        const { location } = this.props;\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n\n            this.setState({\n                text: result,\n            });\n        }\n    }\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n        const { onSearch } = this.props;\n\n        this.setState(\n            {\n                [name]: value,\n            },\n            () => onSearch(value),\n        );\n    };\n\n    render() {\n        const { text } = this.state;\n\n        return (\n            <>\n                <input\n                    type=\"text\"\n                    value={text}\n                    onChange={this.handleChange}\n                    name=\"text\"\n                    className=\"form-element  text-center col-md-12\"\n                    placeholder=\"Enter name of product to search...\"\n                />\n            </>\n        );\n    }\n}\n\nProductsInput.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ProductsInput);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\nimport { getValue } from '../../redux/value';\n\nconst categories = [\n    {\n        text: 'All Categories',\n        path: '/',\n    },\n    {\n        text: 'Home & Kitchen',\n        path: '/Home&Kitchen',\n    },\n    {\n        text: 'Sports & Outdoors',\n        path: '/Sports&Outdoors',\n    },\n    {\n        text: 'Health & Personal Care',\n        path: '/Health&PersonalCare',\n    },\n    {\n        text: 'Baby Products',\n        path: '/BabyProducts',\n    },\n];\n\nconst CategoryList = ({ selectCategory, location, value }) => {\n    return (\n        <>\n            <ul>\n                {categories.map(el => (\n                    <li key={shortid.generate()}>\n                        <NavLink\n                            to={{\n                                pathname: el.path,\n                                search: value ? location.search : null,\n                            }}\n                        >\n                            <ListCategoryDescription\n                                onClick={() => selectCategory(el)}\n                            >\n                                {el.text}\n                            </ListCategoryDescription>\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nCategoryList.propTypes = {\n    selectCategory: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default compose(connect(mapStateToProps), withRouter)(CategoryList);\n","// actionsTypes\n\nexport const LOADER_ON = 'LOADER_ON';\nexport const LOADER_OFF = 'LOADER_OFF';\n\n// actions\n\nexport const loaderOn = () => ({\n    type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n    type: LOADER_OFF,\n});\n\n// reducers\n\nexport const loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case LOADER_ON:\n            return true;\n        case LOADER_OFF:\n            return false;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getLoader = state => state.loading;\n","import axios from 'axios';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = () => axios.get(URL).then(({ data }) => data.products);\n","// actionsTypes\n\nexport const SHOW_ERROR = 'SHOW_ERROR';\n\n// actions\n\nexport const showError = () => ({\n    type: SHOW_ERROR,\n});\n// reducers\n\nexport const errorReducer = (state = false, { type }) => {\n    switch (type) {\n        case SHOW_ERROR:\n            return true;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getErrorMessage = state => state.error;\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { loaderOn, loaderOff } from './loading';\nimport { fetchData } from '../services/fetchData';\nimport { showError } from './error';\n\n// actionsTypes\n\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n\n// actions\n\nexport const addProducts = products => ({\n    type: ADD_PRODUCT,\n    payload: products,\n});\n\nexport const fetchProducts = () => ({\n    type: FETCH_PRODUCTS,\n});\n\n// reducers\n\nexport const productsReducer = (state = [], { type, payload }) => {\n    switch (type) {\n        case FETCH_PRODUCTS:\n            return state;\n        case ADD_PRODUCT:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getProducts = state => state.products;\n\n// saga\n\nfunction* loadProducts() {\n    try {\n        yield put(loaderOn());\n        const data = yield call(fetchData);\n        yield put(addProducts(data));\n        yield put(loaderOff());\n    } catch (error) {\n        yield put(loaderOff());\n        yield put(showError());\n    }\n}\n\nexport default function* rootSaga() {\n    yield takeEvery(FETCH_PRODUCTS, loadProducts);\n}\n","// actionsTypes\n\nexport const ADD_CATEGORY = 'ADD_CATEGORY';\n\n// actions\n\nexport const addCategory = category => ({\n    type: ADD_CATEGORY,\n    payload: category,\n});\n\n// reducers\n\nexport const categoryReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_CATEGORY:\n            return payload;\n        default:\n            return state;\n    }\n};\n\n// selectors\n\nexport const getCategory = state => state.category;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\nimport { getProducts, fetchProducts } from '../../redux/products';\nimport { getLoader } from '../../redux/loading';\nimport { getValue, addValue } from '../../redux/value';\nimport { addCategory, getCategory } from '../../redux/category';\n\nconst filterProductsByCategory = (products, category) =>\n    products.filter(el =>\n        el.bsr_category.toLowerCase().includes(category.toLowerCase()),\n    );\n\nclass App extends Component {\n    componentDidMount() {\n        const { location, fetchData, changeValue } = this.props;\n\n        fetchData();\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n            this.onSearch(result);\n            changeValue(result);\n        }\n    }\n\n    onSearch = value => {\n        const { history, location, changeValue } = this.props;\n\n        changeValue(value);\n\n        history.push({\n            ...location,\n            search: `item=${value}`,\n        });\n    };\n\n    selectCategory = category => {\n        const { changeCategory } = this.props;\n\n        changeCategory(category.text);\n    };\n\n    handleChange = value => {\n        this.onSearch(value);\n    };\n\n    render() {\n        const { loading, products, category } = this.props;\n\n        return (\n            <Container>\n                {loading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={10}>\n                        <ProductsInput onSearch={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={3}>\n                        <CategoryList selectCategory={this.selectCategory} />\n                    </Col>\n                    <Col sm={9}>\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                                render={props => {\n                                    return (\n                                        <ProductsList\n                                            products={products}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Home&Kitchen\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        category,\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Sports&Outdoors\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        category,\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/Health&PersonalCare\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        category,\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                            <Route\n                                path=\"/BabyProducts\"\n                                render={props => {\n                                    const filteredProducts = filterProductsByCategory(\n                                        products,\n                                        category,\n                                    );\n\n                                    return (\n                                        <ProductsList\n                                            products={filteredProducts}\n                                            {...props}\n                                        />\n                                    );\n                                }}\n                            />\n                        </Switch>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: getProducts(state),\n    loading: getLoader(state),\n    value: getValue(state),\n    category: getCategory(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(fetchProducts()),\n    changeValue: value => dispatch(addValue(value)),\n    changeCategory: category => dispatch(addCategory(category)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(App);\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga, { productsReducer } from '../products';\nimport { loaderReducer } from '../loading';\nimport { errorReducer } from '../error';\nimport { valueReducer } from '../value';\nimport { categoryReducer } from '../category';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loading: loaderReducer,\n    error: errorReducer,\n    value: valueReducer, // searchValue\n    category: categoryReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}