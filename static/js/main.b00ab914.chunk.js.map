{"version":3,"sources":["styledComponents/styled.js","components/ProdutsList/ProductsItem/ProductsItem.js","redux/value/selectors.js","components/ProdutsList/ProductsList.js","components/ProductsInput/ProductsInput.js","components/CategoryList/CategoryList.js","redux/products/types.js","redux/products/reducers.js","redux/products/selectors.js","redux/loader/types.js","redux/loader/selectors.js","redux/loader/actions.js","redux/loader/index.js","redux/loader/reducers.js","services/fetchData.js","redux/products/actions.js","redux/error/types.js","redux/error/actions.js","redux/products/operations.js","redux/products/index.js","redux/value/types.js","redux/value/action.js","components/App/App.js","redux/error/index.js","redux/error/reducers.js","redux/value/reducers.js","redux/store/store.js","index.js"],"names":["ListItem","styled","li","List","ul","ListCategoryDescription","span","ListItemLink","a","ListItemName","p","ListItemPrice","ProductsItem","img","brand","name","bsr_category","link","price","shortName","slice","className","src","alt","width","height","href","target","rel","getValue","state","value","connect","products","filteredProducts","filter","el","toLowerCase","includes","map","key","asin","ProductsInput","text","handleChange","onSearch","props","setState","this","type","onChange","placeholder","Component","CategoryList","categories","selectCategory","shortid","generate","to","replace","onClick","ADD_PRODUCT","FETCH_PRODUCTS","productsReducers","payload","getProducts","fff","LOADER_ON","LOADER_OFF","getLoader","loading","loaderOn","loaderOff","loadingReducer","fetchData","axios","get","then","data","addProducts","fetchProducts","SHOW_ERROR","showError","loadProducts","rootSaga","put","loadingActions","call","takeEvery","productsReducer","ADD_VALUE","addValue","App","history","location","changeValue","push","search","category","searchValue","index","lastIndexOf","result","substring","reduce","acc","getUniqueCategories","unshift","color","style","textAlign","length","path","exact","render","compose","productsSelectors","dispatch","productsActions","withRouter","errorReducer","valueReducer","sagaMiddleware","createSagaMiddleware","middleware","rootReducer","combineReducers","error","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b00ab914.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    text-align: center;\n    margin-bottom: 20px;\n    padding: 20px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n`;\n\nexport const ListCategoryDescription = styled.span`\n    display: block;\n    margin: 10px 0;\n    font-weight: 700;\n    cursor: pointer;\n`;\n\nexport const ListItemLink = styled.a`\n    display: block;\n    margin-bottom: 6px;\n    font-size: 1.2rem;\n    font-weight: 700;\n    text-decoration: none;\n    color: #159292;\n`;\n\nexport const ListItemName = styled.p`\n    margin: 10px 0;\n    font-size: 1.5rem;\n`;\n\nexport const ListItemPrice = styled.p`\n    font-weight: 700;\n    font-size: 1.4rem;\n    color: #0e9753;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListItem,\n    ListItemLink,\n    ListItemName,\n    ListItemPrice,\n} from '../../../styledComponents/styled';\n\nconst ProductsItem = ({ img, brand, name, bsr_category, link, price }) => {\n    const shortName = name.slice(0, 16);\n\n    return (\n        <ListItem className=\"col-md-4\">\n            <img\n                src={img}\n                alt={brand}\n                className=\"list-item__img\"\n                width=\"120\"\n                height=\"150\"\n            />\n            <h3 className=\"list-item__headline\">{bsr_category}</h3>\n            <ListItemName className=\"list-item__name\">{shortName}</ListItemName>\n            <ListItemLink\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"list-item__link\"\n            >\n                Show Product\n            </ListItemLink>\n            <ListItemPrice className=\"list-item__price\">\n                {price} $\n            </ListItemPrice>\n        </ListItem>\n    );\n};\n\nProductsItem.propTypes = {\n    img: PropTypes.string.isRequired,\n    brand: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bsr_category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n};\n\nexport default ProductsItem;\n","const getValue = state => state.value;\n\nexport default getValue;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ProductItem from './ProductsItem/ProductsItem';\nimport { List } from '../../styledComponents/styled';\nimport getValue from '../../redux/value/selectors';\n\nconst ProductsList = ({ products, value }) => {\n    const filteredProducts =\n        value !== 'All Categories' && value\n            ? products.filter(\n                  el =>\n                      el.name.toLowerCase().includes(value.toLowerCase()) ||\n                      el.bsr_category\n                          .toLowerCase()\n                          .includes(value.toLowerCase()),\n              )\n            : products;\n\n    return (\n        <List className=\"col-sm-10 col-md-8\">\n            {filteredProducts.map(el => (\n                <ProductItem {...el} key={el.asin} />\n            ))}\n        </List>\n    );\n};\n\nProductsList.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            asin: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default connect(mapStateToProps)(ProductsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getValue from '../../redux/value/selectors';\n\nclass ProductsInput extends Component {\n    state = {\n        text: '',\n    };\n\n    handleChange = ({ target }) => {\n        const { name, value } = target;\n        const { onSearch } = this.props;\n\n        this.setState(\n            {\n                [name]: value,\n            },\n            () => onSearch(value),\n        );\n    };\n\n    render() {\n        const { text } = this.state;\n\n        return (\n            <>\n                <input\n                    type=\"text\"\n                    value={text}\n                    onChange={this.handleChange}\n                    name=\"text\"\n                    className=\"form-element  text-center col-md-12\"\n                    placeholder=\"Enter name of product to search...\"\n                />\n            </>\n        );\n    }\n}\n\nProductsInput.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getValue(state),\n});\n\nexport default connect(mapStateToProps)(ProductsInput);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { ListCategoryDescription } from '../../styledComponents/styled';\n\nconst CategoryList = ({ categories, selectCategory }) => {\n    return (\n        <>\n            <ul className=\"col-sm-2 col-md-4\">\n                {categories.map(el => (\n                    <li key={shortid.generate()}>\n                        <NavLink to={el.replace(/\\s/g, '')}>\n                            <ListCategoryDescription\n                                onClick={() => selectCategory(el)}\n                            >\n                                {el}\n                            </ListCategoryDescription>\n                        </NavLink>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nCategoryList.propTypes = {\n    categories: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    selectCategory: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;\n","export const ADD_PRODUCT = 'productList/products/ADD_PRODUCT';\nexport const FETCH_PRODUCTS = 'productList/products/FETCH_PRODUCTS';\n","import { ADD_PRODUCT, FETCH_PRODUCTS } from './types';\n\nconst productsReducers = (state = [], { type, payload }) => {\n    switch (type) {\n        case FETCH_PRODUCTS:\n            return state;\n        case ADD_PRODUCT:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default productsReducers;\n","export const getProducts = state => state.products;\n\nexport const fff = () => {};\n","export const LOADER_ON = 'productList/loader/LOADER_ON';\nexport const LOADER_OFF = 'productList/loader/LOADER_OFF';\n","const getLoader = state => state.loading;\n\nexport default getLoader;\n","import { LOADER_ON, LOADER_OFF } from './types';\n\nexport const loaderOn = () => ({\n    type: LOADER_ON,\n});\n\nexport const loaderOff = () => ({\n    type: LOADER_OFF,\n});\n","import loadingReducer from './reducers';\n\nimport * as loadingSelectors from './selectors';\nimport * as loadingActions from './actions';\nimport * as loadingType from './types';\n\nexport { loadingSelectors, loadingActions, loadingType };\n\nexport default loadingReducer;\n","import { LOADER_OFF, LOADER_ON } from './types';\n\nconst loaderReducer = (state = false, { type }) => {\n    switch (type) {\n        case LOADER_ON:\n            return true;\n        case LOADER_OFF:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default loaderReducer;\n","import axios from 'axios';\n\nexport const URL = 'https://demo9165932.mockable.io/products';\n\nexport const fetchData = () => axios.get(URL).then(({ data }) => data.products);\n","import { ADD_PRODUCT, FETCH_PRODUCTS } from './types';\n\nexport const addProducts = products => ({\n    type: ADD_PRODUCT,\n    payload: products,\n});\n\nexport const fetchProducts = () => ({\n    type: FETCH_PRODUCTS,\n});\n","const SHOW_ERROR = 'productList/error/SHOW_ERROR';\n\nexport default SHOW_ERROR;\n","import SHOW_ERROR from './types';\n\nconst showError = () => ({\n    type: SHOW_ERROR,\n});\n\nexport default showError;\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { loadingActions } from '../loader';\nimport { fetchData } from '../../services/fetchData';\nimport { addProducts } from './actions';\nimport showError from '../error/actions';\nimport { FETCH_PRODUCTS } from './types';\n\nfunction* loadProducts() {\n    try {\n        yield put(loadingActions.loaderOn());\n        const data = yield call(fetchData);\n        yield put(addProducts(data));\n        yield put(loadingActions.loaderOff());\n    } catch (error) {\n        yield put(loadingActions.loaderOff());\n        yield put(showError());\n    }\n}\n\nexport default function* rootSaga() {\n    yield takeEvery(FETCH_PRODUCTS, loadProducts);\n}\n","import productsReducer from './reducers';\n\nimport * as productsSelectors from './selectors';\nimport * as productsOperations from './operations';\nimport * as productsActions from './actions';\nimport * as productsType from './types';\n\nexport { productsSelectors, productsOperations, productsActions, productsType };\n\nexport default productsReducer;\n","const ADD_VALUE = 'productList/value/ADD_VALUE';\n\nexport default ADD_VALUE;\n","import ADD_VALUE from './types';\n\nconst addValue = value => ({\n    type: ADD_VALUE,\n    payload: value,\n});\n\nexport default addValue;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ProductsList from '../ProdutsList/ProductsList';\nimport ProductsInput from '../ProductsInput/ProductsInput';\nimport CategoryList from '../CategoryList/CategoryList';\nimport { productsSelectors, productsActions } from '../../redux/products';\nimport getLoader from '../../redux/loader/selectors';\nimport getValue from '../../redux/value/selectors';\nimport addValue from '../../redux/value/action';\n\nconst getUniqueCategories = products => {\n    return products.reduce((acc, el) => {\n        if (!acc.includes(el.bsr_category)) acc.push(el.bsr_category);\n        return acc;\n    }, []);\n};\n\nclass App extends Component {\n    componentDidMount() {\n        const { location, fetchData } = this.props;\n\n        fetchData();\n\n        if (location.search) {\n            const searchValue = location.search;\n            const index = searchValue.lastIndexOf('=');\n            const result = searchValue.substring(index + 1);\n            this.onSearch(result);\n        }\n    }\n\n    onSearch = value => {\n        const { history, location, changeValue } = this.props;\n\n        changeValue(value);\n\n        if (value) {\n            history.push({\n                ...location,\n                search: `item=${value}`,\n            });\n        }\n    };\n\n    selectCategory = category => {\n        this.onSearch(category);\n    };\n\n    handleChange = value => {\n        this.onSearch(value);\n    };\n\n    render() {\n        const { loading, products } = this.props;\n        const categories = getUniqueCategories(products);\n        categories.unshift('All Categories');\n\n        // Я понимаю, что лучше было бы захардкодить список катерогий, а не вычислять их динмачески,\n        // тогда не пришлось бы делать лишние движение со списком, сделал так исключительно для практики\n\n        return (\n            <div className=\"container\">\n                {loading && (\n                    <Loader\n                        type=\"Triangle\"\n                        color=\"#00BFFF\"\n                        style={{ textAlign: 'center' }}\n                    />\n                )}\n                <ProductsInput onSearch={this.handleChange} />\n                <div className=\"row\">\n                    {categories.length >= 5 && (\n                        <CategoryList\n                            categories={categories}\n                            selectCategory={this.selectCategory}\n                        />\n                    )}\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/AllCategories\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Home&Kitchen\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Sports&Outdoors\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/Health&PersonalCare\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/BabyProducts\"\n                            render={props => (\n                                <ProductsList products={products} {...props} />\n                            )}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    products: productsSelectors.getProducts(state),\n    loading: getLoader(state),\n    value: getValue(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(productsActions.fetchProducts()),\n    changeValue: value => dispatch(addValue(value)),\n});\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(App);\n","import errorReducer from './reducers';\n\nimport * as errorSelectors from './selectors';\nimport * as errorActions from './actions';\nimport * as errorType from './types';\n\nexport { errorSelectors, errorActions, errorType };\n\nexport default errorReducer;\n","import SHOW_ERROR from './types';\n\nconst errorReducer = (state = false, { type }) => {\n    switch (type) {\n        case SHOW_ERROR:\n            return true;\n        default:\n            return state;\n    }\n};\n\nexport default errorReducer;\n","import ADD_VALUE from './types';\n\nconst valueReducer = (state = '', { type, payload }) => {\n    switch (type) {\n        case ADD_VALUE:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default valueReducer;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport productsReducer from '../products';\nimport loadingReducer from '../loader';\nimport errorReducer from '../error';\nimport valueReducer from '../value/reducers';\nimport rootSaga from '../products/operations';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loading: loadingReducer,\n    error: errorReducer,\n    value: valueReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}